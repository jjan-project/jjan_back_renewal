plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'

    //QueryDsl
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {

    //[ Basic Frames ]
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web' // web
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //jpa
    implementation 'org.springframework.boot:spring-boot-starter-security' //security
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test' //test
    implementation 'org.projectlombok:lombok' //lombok
    annotationProcessor 'org.projectlombok:lombok' //lombok
    runtimeOnly 'mysql:mysql-connector-java:8.0.27' //mysql
    developmentOnly 'org.springframework.boot:spring-boot-devtools' //devtools

    //[ Java JWT ]
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    //[ Swagger ]
    //https://springdoc.org/v2/
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

    // [ H2 ]
    runtimeOnly 'com.h2database:h2'

    //[ Mail ]
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Spring Cloud Starter AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
    useJUnitPlatform()
}

//QueryDsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//QueryDsl 추가 끝